{"version":3,"file":"script.js","sources":["js/templates/bottlePreview.js","js/index.js"],"sourcesContent":["export function bottlePreviewTemplate (altText, imageData) {\n\n    const template = `\n    <img alt=\"${altText}\" src=\"${imageData}\" class=\"image-preview\"> \n    `;\n\n    return template;\n\n}","\"use strict\";\n\n//////////////////////\n// Imports\n//////////////////////\nimport { bottlePreviewTemplate } from './templates/bottlePreview.js';\n\n//////////////////////\n// DOM Elements\n//////////////////////\n\n// get file \nconst fileInput = document.getElementById('fileInput');\nconst sectionUpload = document.getElementById('section-upload');\nconst sectionCompetitor = document.getElementById('section-line-up');\n// const imagePreview = document.getElementById('imagePreview');\n\n\n//////////////////////\n// Functions\n//////////////////////\n\nfunction putImageInDom() { //function to put imported image in DOM\n\n    // console.log(\"put image in the DOM\");\n    const bottleImageDataUrl = localStorage.getItem('bottle-image');\n\n    if(bottleImageDataUrl) { //check if an image exists within localStorage\n\n        sectionUpload.innerHTML = ''; //clear current image in the DOM\n\n        const imagePreviewElement = bottlePreviewTemplate('uploaded bottle', bottleImageDataUrl); //call function to populate template\n\n        sectionUpload.insertAdjacentHTML('beforeend', imagePreviewElement); //insert into the DOM\n\n    };\n};\n\nasync function updateCompetitorImage() { //function to create competitor image and place within DOM\n\n    console.log('update competitor image');\n\n    let bottleImageDataUrl = localStorage.getItem('bottle-image'); //get the image from localStorage \n    bottleImageDataUrl = Buffer.from(bottleImageDataUrl.replace(/^data:image\\/\\w+;base64,/, \"\"),'base64'); // turn image into binary format for Jimp to read\n    const newImage = await Jimp.read(Buffer.from(bottleImageDataUrl, 'base64')); // load image using Jimp\n    \n    await newImage.rotate(180);\n\n    await newImage.getBase64(jimp.MIME_PNG, function (err, src) {\n        console.log(src);\n        localStorage.setItem(\"competitor-image\", src);\n        const imagePreviewElement = bottlePreviewTemplate('uploaded bottle', src); //call function to populate template\n        sectionCompetitor.insertAdjacentHTML('beforeend', imagePreviewElement); //insert into the DOM\n    });\n\n\n\n    // await newImage.getBase64Async(Jimp.MIME_PNG);\n    // console.log(newImage);\n    // localStorage.setItem(\"competitor-image\", newImage); //clear localStorage\n    // clg\n\n    // await newImage.writeAsync(`${Date.now()}-rotatedImage.png`);\n\n\n    //get imported image\n    // let bottleImage = await Jimp.read(bottleImageDataUrl);\n\n    // console.log(Jimp);\n    // console.log(bottleImage);\n\n    //get background\n    // const image = await Jimp.read('./images/background.png');\n\n    //position import image on background and create\n    // bottleImage = await bottleImage \n    //     image.composite(bottleImage, 0,0, {\n    //         mode: Jimp.BLEND_SOURCE_OVER,\n    //         opacityDest: 1,\n    //         opacitySource: 0.5\n    //     })\n\n    // create new competitor image in local storage\n    // await bottleImage.writeAsync(`newImage.png`);\n\n    //place new image in the DOM\n    \n}\n\n//////////////////////\n// Event listeners\n//////////////////////\ndocument.addEventListener(\"DOMContentLoaded\", putImageInDom);\n\nfileInput.addEventListener(\"change\", (e) => { //select file input button\n    \n    if (localStorage.getItem('bottle-image')) { // check if there is image data within local storage\n        localStorage.setItem(\"bottle-image\", ''); //clear localStorage\n    } else {\n        console.log('nothing there');\n    }\n\n    const reader = new FileReader(); //create new reader instance to convert to data url\n\n    reader.readAsDataURL(e.target.files[0]); //pass file into reader\n\n    reader.addEventListener(\"load\", () => { //add event listener to the load event\n        localStorage.setItem(\"bottle-image\", reader.result);\n        putImageInDom();\n        updateCompetitorImage();\n    });\n\n});\n\n"],"names":["bottlePreviewTemplate","altText","imageData","template","fileInput","document","getElementById","sectionUpload","sectionCompetitor","putImageInDom","bottleImageDataUrl","localStorage","getItem","innerHTML","imagePreviewElement","insertAdjacentHTML","updateCompetitorImage","console","log","Buffer","from","replace","Jimp","read","newImage","rotate","getBase64","jimp","MIME_PNG","err","src","setItem","addEventListener","e","reader","FileReader","readAsDataURL","target","files","result"],"mappings":"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"}