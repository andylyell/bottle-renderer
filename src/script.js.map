{"version":3,"file":"script.js","sources":["js/templates/bottlePreview.js","js/index.js"],"sourcesContent":["export function bottlePreviewTemplate (altText, imageData) {\n\n    const template = `\n    <img alt=\"${altText}\" src=\"${imageData}\" class=\"image-preview\"> \n    `;\n\n    return template;\n\n}","\"use strict\";\n\n//////////////////////\n// Imports\n//////////////////////\nimport { bottlePreviewTemplate } from './templates/bottlePreview.js';\n\n//////////////////////\n// DOM Elements\n//////////////////////\nconst fileInput = document.getElementById('fileInput');\nconst sectionUpload = document.getElementById('section-upload');\nconst competitorImageContainer = document.getElementById('competitor-image-container');\n\n//////////////////////\n// Functions\n//////////////////////\n\n//==// function to put imported image in DOM //==//\nfunction putImageInDom() {\n    const bottleImageDataUrl = localStorage.getItem('bottle-image');\n    if(bottleImageDataUrl) { //check if an image exists within localStorage\n        sectionUpload.innerHTML = ''; //clear current image in the DOM\n        const imagePreviewElement = bottlePreviewTemplate('uploaded bottle', bottleImageDataUrl); //call function to populate template\n        sectionUpload.insertAdjacentHTML('beforeend', imagePreviewElement); //insert into the DOM\n    };\n};\n\n//==// function to create competitor image and place within DOM //==//\nfunction updateCompetitorImage() { \n    let bottleImageDataUrl = localStorage.getItem('bottle-image'); //get the image from localStorage \n    bottleImageDataUrl = Buffer.from(bottleImageDataUrl.replace(/^data:image\\/\\w+;base64,/, \"\"),'base64'); // turn image into binary format for Jimp to read\n    Jimp.read(bottleImageDataUrl) //use a Jimp function constructor and pass in Base64URL\n        .then(function(newImage) { // call promise and pass in newImage as anonymous function\n            newImage.rotate(180) // rotate image\n            .getBase64(Jimp.MIME_PNG, function(err, src) { //change image to PNG and convert to Base64URL\n                localStorage.setItem(\"competitor-image\", src); // set item in local storage\n                const imagePreviewElement = bottlePreviewTemplate('uploaded bottle', src); //call function to populate template\n                competitorImageContainer.innerHTML = ''; //clear container for image\n                competitorImageContainer.insertAdjacentHTML('beforeend', imagePreviewElement); //insert into the DOM\n            });\n        })\n        .catch(function(err) { // catch errors that occur\n            console.error(err); //print error to the console\n        });\n    console.log('updated competitor image');    \n}\n\n//////////////////////\n// Event listeners\n//////////////////////\ndocument.addEventListener(\"DOMContentLoaded\", putImageInDom);\nfileInput.addEventListener(\"change\", (e) => { //select file input button and pass in click event\n    if (localStorage.getItem('bottle-image')) { // guard clause check if there is image data within local storage\n        localStorage.setItem(\"bottle-image\", ''); //clear localStorage for bottle image\n    }\n    const reader = new FileReader(); //create new reader instance to convert to data url\n    reader.readAsDataURL(e.target.files[0]); //pass file into reader to convert to Data Url\n    reader.addEventListener(\"load\", () => { //add event listener to the load event\n        localStorage.setItem(\"bottle-image\", reader.result); //set local storage with result from reader instance\n        putImageInDom(); // put image into the DOM with function\n        updateCompetitorImage(); // update competitor image within the DOM with new image\n    });\n});\n\n"],"names":["bottlePreviewTemplate","altText","imageData","template","fileInput","document","getElementById","sectionUpload","competitorImageContainer","putImageInDom","bottleImageDataUrl","localStorage","getItem","innerHTML","imagePreviewElement","insertAdjacentHTML","updateCompetitorImage","Buffer","from","replace","Jimp","read","then","newImage","rotate","getBase64","MIME_PNG","err","src","setItem","console","error","log","addEventListener","e","reader","FileReader","readAsDataURL","target","files","result"],"mappings":"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"}