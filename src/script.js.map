{"version":3,"file":"script.js","sources":["js/templates/bottlePreview.js","js/index.js"],"sourcesContent":["export function bottlePreviewTemplate (altText, imageData) {\n\n    const template = `\n    <img alt=\"${altText}\" src=\"${imageData}\" class=\"image-preview\"> \n    `;\n\n    return template;\n\n}","\"use strict\";\n\n//////////////////////\n// Imports\n//////////////////////\nimport { bottlePreviewTemplate } from './templates/bottlePreview.js';\n\n//////////////////////\n// DOM Elements\n//////////////////////\nconst fileInput = document.getElementById('fileInput');\nconst sectionUpload = document.getElementById('section-upload');\nconst competitorImageContainer = document.getElementById('competitor-image-container');\n\n//////////////////////\n// Functions\n//////////////////////\n\n//==// function to put a single image in the DOM //==//\nfunction putImageInDom(imageName, imageLocation) {\n    const bottleImageDataUrl = localStorage.getItem(imageName);\n    if(bottleImageDataUrl) { //check if an image exists within localStorage\n        imageLocation.innerHTML = ''; //clear current image in the DOM\n        const imagePreviewElement = bottlePreviewTemplate('uploaded bottle', bottleImageDataUrl); //call function to populate template\n        imageLocation.insertAdjacentHTML('beforeend', imagePreviewElement); //insert into the DOM\n    };\n};\n\n//==// function to put multiple in DOM //==//\nfunction placeImagesInDom(images) { //get array of multiple image objects\n    images.forEach(function(image) {\n        const {imageName, imageLocation} = image; //destructure object\n        const bottleImageDataUrl = localStorage.getItem(imageName); // get image from local storage that matches image array\n        if(bottleImageDataUrl) { //check if an image exists within localStorage\n            const imagePreviewElement = bottlePreviewTemplate('uploaded bottle', bottleImageDataUrl); //call function to populate image template\n            imageLocation.innerHTML = ''; //clear current image in the DOM\n            imageLocation.insertAdjacentHTML('beforeend', imagePreviewElement); //insert into the DOM\n        };\n        return;\n    })\n};\n\n//==// function to create competitor image and place within DOM //==//\nfunction updateCompetitorImage() { \n    let bottleImageDataUrl = localStorage.getItem('bottle-image'); //get the image from localStorage \n    bottleImageDataUrl = Buffer.from(bottleImageDataUrl.replace(/^data:image\\/\\w+;base64,/, \"\"),'base64'); // turn image into binary format for Jimp to read\n\n    const bottleImage = Jimp.read(bottleImageDataUrl) //use a Jimp function constructor and pass in Base64URL\n        .then(function(newImage) { // call promise and pass in newImage as anonymous function\n            return newImage; // promise returns image when handled\n        })\n        .catch(function(err) { // catch errors that occur\n            console.error(err); //print error to the console\n        });\n\n    const backgroundImage = Jimp.read('images/background.png')\n        .then(function(backgroundImageData) {\n            return backgroundImageData; // promoise returns image when handled\n        })\n        .catch(function(err) {\n            console.error(err);\n        })\n    \n    const combinedImage = Promise.all([bottleImage, backgroundImage]); //promise.all to resolve all promises to use data from multiple images\n\n    combinedImage\n        .then(function(data) { //thenable on promise to check if resolved or rejects\n            data[1] // access the backgroundImage\n                .composite(data[0], 0 ,0) // place bottle image on top at location x and y\n                .getBase64(Jimp.MIME_PNG, function(err, src) { // convert to Base64URL string\n                    // console.log(src); // print to console\n                    localStorage.setItem(\"competitor-image-combined\", src); // set item in local storage\n                    competitorImageContainer.innerHTML = ''; //clear container for image\n                    const imagePreviewElement = bottlePreviewTemplate('uploaded bottle', src); //call function to populate template\n                    competitorImageContainer.insertAdjacentHTML('beforeend', imagePreviewElement); //insert into the DOM\n                });\n        })\n        .catch(function(err){\n            console.error(err);\n        })        \n\n}\n\n//////////////////////\n// Event listeners\n//////////////////////\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n    const imagesToUpdate = [\n        {\n            imageName: 'bottle-image',\n            imageLocation: sectionUpload\n        },\n        {\n            imageName: 'competitor-image-combined',\n            imageLocation: competitorImageContainer\n        },\n    ]\n    placeImagesInDom(imagesToUpdate);\n});\nfileInput.addEventListener(\"change\", (e) => { //select file input button and pass in click event\n    if (localStorage.getItem('bottle-image')) { // guard clause check if there is image data within local storage\n        localStorage.setItem(\"bottle-image\", ''); //clear localStorage for bottle image\n    }\n    const reader = new FileReader(); //create new reader instance to convert to data url\n    reader.readAsDataURL(e.target.files[0]); //pass file into reader to convert to Data Url\n    reader.addEventListener(\"load\", () => { //add event listener to the load event\n        localStorage.setItem(\"bottle-image\", reader.result); //set local storage with result from reader instance\n        updateCompetitorImage(); // update competitor image within the DOM with new image\n        const imagesToUpdate = [\n            {\n                imageName: 'bottle-image',\n                imageLocation: sectionUpload\n            },\n            {\n                imageName: 'competitor-image-combined',\n                imageLocation: competitorImageContainer\n            },\n        ]\n        placeImagesInDom(imagesToUpdate);\n\n    });\n});\n\n"],"names":["bottlePreviewTemplate","altText","imageData","template","fileInput","document","getElementById","sectionUpload","competitorImageContainer","placeImagesInDom","images","forEach","image","imageName","imageLocation","bottleImageDataUrl","localStorage","getItem","imagePreviewElement","innerHTML","insertAdjacentHTML","updateCompetitorImage","Buffer","from","replace","bottleImage","Jimp","read","then","newImage","err","console","error","backgroundImage","backgroundImageData","combinedImage","Promise","all","data","composite","getBase64","MIME_PNG","src","setItem","addEventListener","imagesToUpdate","e","reader","FileReader","readAsDataURL","target","files","result"],"mappings":"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"}